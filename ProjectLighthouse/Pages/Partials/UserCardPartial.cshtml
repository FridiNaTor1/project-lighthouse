@using LBPUnion.ProjectLighthouse
@using Microsoft.EntityFrameworkCore
@using LBPUnion.ProjectLighthouse.Types
@model LBPUnion.ProjectLighthouse.Types.User

@{
    HeartedProfile hearted = (HeartedProfile)ViewData["HeartedProfile"];
    await using Database database = new();

    string userUsername = string.IsNullOrEmpty(Model.Username) ? "How do you exist?" : Model.Username;

    bool isHearted = false;

    if (hearted != null)
    {
        isHearted = await database.HeartedProfiles.FirstOrDefaultAsync(h => h.HeartedUserId == hearted.HeartedUserId && h.UserId == Model.UserId) != null;
    }

    string callbackUrl = (string)ViewData["CallbackUrl"];
    bool showLink = (bool?)ViewData["ShowLink"] ?? false;
}
<div class="ui grid">
    <div class="eight wide column">
        @if (showLink)
        {
            <h2 style="margin-bottom: 2px;">
                <a href="~/user/@Model.UserId">@userUsername</a>
            </h2>
        }
        else
        {
            <h1 style="margin-bottom: 2px;">
                @userUsername
            </h1>
        }
        <div class="statsUnderTitle" style="margin-bottom: 10px;">
            <i class="pink heart icon" title="Hearts"></i> <span>@Model.Hearts</span>
        </div>
    </div>
    <div class="eight wide right aligned column">
        @if (hearted != null)
        {
            if (isHearted)
            {
                <a class="ui pink tiny button" href="/user/@Model.UserId/unheart?callbackUrl=@callbackUrl" title="Unheart">
                    <i class="broken heart icon" style="margin: 0"></i>
                </a>
            }
            else
            {
                <a class="ui pink tiny button" href="/user/@Model.User.UserId/heart?callbackUrl=@callbackUrl" title="Heart">
                    <i class="heart icon" style="margin: 0"></i>
                </a>
            }
        }
    </div>
</div>
