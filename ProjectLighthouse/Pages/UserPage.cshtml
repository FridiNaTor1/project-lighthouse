@page "/user/{userId:int}"
@using System.IO
@using System.Web
@using LBPUnion.ProjectLighthouse.Types
@using LBPUnion.ProjectLighthouse.Types.Profiles
@using LBPUnion.ProjectLighthouse.Types.Settings
@model LBPUnion.ProjectLighthouse.Pages.UserPage

@{
    Layout = "Layouts/BaseLayout";
    Model.ShowTitleInPage = false;

    Model.Title = Model.ProfileUser!.Username + "'s user page";
    Model.Description = Model.ProfileUser!.Biography;
}

@if (Model.ProfileUser.Banned)
{
    <div class="ui inverted red segment">
        <p>
            <b>User is currently banned!</b>
        </p>
        @if (Model.User != null && Model.User.IsAdmin)
        {
            <p>Reason: @Model.ProfileUser.BannedReason</p>
            <a class="ui inverted button" href="/admin/user/@Model.ProfileUser.UserId/unban">
                <i class="ban icon"></i>
                <span>Unban User</span>
            </a>
        }
        else
        {
            <p>For shame...</p>
        }
    </div>
}

<div class="ui grid">
    <div class="eight wide column">
        <h1>@Model.Title</h1>
        <p>
            <i>@Model.ProfileUser!.Status</i>
        </p>

        <div class="statsUnderTitle">
            <i class="pink heart icon" title="Hearts"></i> <span>@Model.ProfileUser.Hearts</span>
            <i class="blue comment icon" title="Comments"></i> <span>@Model.ProfileUser.Comments</span>
            <i class="green upload icon" title="Uploaded Levels"></i><span>@Model.ProfileUser.UsedSlots / @ServerSettings.Instance.EntitledSlots</span>
            <i class="purple camera icon" title="Uploaded Photos"></i><span>@Model.ProfileUser.PhotosByMe</span>
        </div>
    </div>
    <div class="eight wide right aligned column">
        <br>
        @if (Model.ProfileUser != Model.User && Model.User != null)
        {
            if (!Model.IsProfileUserHearted)
            {
                <a class="ui pink button" href="/user/@Model.ProfileUser.UserId/heart">
                    <i class="heart icon"></i>
                    <span>Heart</span>
                </a>
            }
            else
            {
                <a class="ui pink button" href="/user/@Model.ProfileUser.UserId/unheart">
                    <i class="heart broken icon"></i>
                    <span>Unheart</span>
                </a>
            }
        }
        @if (Model.ProfileUser == Model.User)
        {
            <a class="ui blue button" href="/passwordReset">
                <i class="key icon"></i>
                <span>Reset Password</span>
            </a>
        }
        @if (Model.User != null && Model.User.IsAdmin && !Model.ProfileUser.Banned)
        {
            <a class="ui red button" href="/admin/user/@Model.ProfileUser.UserId/ban">
                <i class="ban icon"></i>
                <span>Ban User</span>
            </a>
        }
    </div>
    <div class="eight wide column">
        <div class="ui blue segment">
            <h2>Biography</h2>
            <p>@Model.ProfileUser.Biography</p>
        </div>
    </div>
    <div class="eight wide column">
        <div class="ui red segment">
            <h2>Recent Activity</h2>
            <p>Coming soon!</p>
        </div>
    </div>
</div>


@if (Model.Photos != null && Model.Photos.Count != 0)
{
    <div class="ui purple segment">
        <h2>Most recent photos</h2>

        <div class="ui center aligned grid">
            @foreach (Photo photo in Model.Photos)
            {
                <div class="eight wide column">
                    @await Html.PartialAsync("Partials/PhotoPartial", photo)
                </div>
            }
        </div>
    </div>
}


<div class="ui yellow segment">
    <h1>Comments</h1>
    @if (Model.ProfileUser.Comments == 0)
    {
        <p>There are no comments.</p>
    }

    @foreach (Comment comment in Model.Comments!)
    {
        DateTimeOffset timestamp = DateTimeOffset.FromUnixTimeSeconds(comment.Timestamp / 1000);
        StringWriter messageWriter = new();
        HttpUtility.HtmlDecode(comment.Message, messageWriter);
        string decodedMessage = messageWriter.ToString();
        <div>
            <b><a href="/user/@comment.PosterUserId">@comment.Poster.Username</a>: </b>
            <span>@decodedMessage</span>
            <p>
                <i>@timestamp.ToString("MM/dd/yyyy @ h:mm tt") UTC</i>
            </p>
            <div class="ui divider"></div>
        </div>
    }
</div>