@page "/slot/{id:int}"
@using System.IO
@using System.Web
@using LBPUnion.ProjectLighthouse.Helpers.Extensions
@using LBPUnion.ProjectLighthouse.Types.Profiles
@model LBPUnion.ProjectLighthouse.Pages.SlotPage

@{
    Layout = "Layouts/BaseLayout";
    Model.ShowTitleInPage = false;

    Model.Title = Model.Slot.Name;
    Model.Description = Model.Slot.Description;
}

@await Html.PartialAsync("Partials/SlotCardPartial", Model.Slot, new ViewDataDictionary(ViewData)
{
    {
        "User", Model.User
    },
    {
        "CallbackUrl", $"~/slot/{Model.Slot.SlotId}"
    },
    {
        "ShowLink", false
    },
    {
        "IsMobile", Model.Request.IsMobile()
    },
})
<br>

<div class="ui grid">
    <div class="eight wide column">
        <div class="ui blue segment">
            <h2>Description</h2>
            <p>@(string.IsNullOrEmpty(Model.Slot.Description) ? "This level has no description." : Model.Slot.Description)</p>
        </div>
    </div>
    <div class="eight wide column">
        <div class="ui red segment">
            <h2>Tags</h2>
            @{
                string[] authorLabels = Model.Slot.AuthorLabels.Split(",");
                if (authorLabels.Length == 1) // ..?? ok c#
                {
                    <p>This level has no tags.</p>
                }
                else
                {
                    foreach (string label in authorLabels.Where(label => !string.IsNullOrEmpty(label)))
                    {
                        <div class="ui blue label">@label.Replace("LABEL_", "")</div>
                    }
                }
            }
        </div>
    </div>
</div>
<div class="ui yellow segment">
    <h1>Comments</h1>
    @if (Model.Comments.Count == 0)
    {
        <p>There are no comments.</p>
    }

    @foreach (Comment comment in Model.Comments!)
    {
        DateTimeOffset timestamp = DateTimeOffset.FromUnixTimeSeconds(comment.Timestamp / 1000);
        StringWriter messageWriter = new();
        HttpUtility.HtmlDecode(comment.getComment(), messageWriter);
        string decodedMessage = messageWriter.ToString();
        <div>
            <b><a href="/user/@comment.PosterUserId">@comment.Poster.Username</a>: </b>
            @if (comment.Deleted)
            {
                <i><span>@decodedMessage</span></i>
            }
            else
            {
                <span>@decodedMessage</span>
            }
            <p>
                <i>@timestamp.ToString("MM/dd/yyyy @ h:mm tt") UTC</i>
            </p>
            <div class="ui divider"></div>
        </div>
    }
</div>
@if (Model.User != null && Model.User.IsAdmin)
{
    <div class="ui yellow segment">
        <h2>Admin Settings</h2>

        @if (Model.Slot.TeamPick)
        {
            <a href="/admin/slot/@Model.Slot.SlotId/removeTeamPick">
                <div class="ui pink button">
                    <i class="ribbon icon"></i>
                    <span>Remove Team Pick</span>
                </div>
            </a>
        }
        else
        {
            <a href="/admin/slot/@Model.Slot.SlotId/teamPick">
                <div class="ui pink button">
                    <i class="ribbon icon"></i>
                    <span>Team Pick</span>
                </div>
            </a>
        }

        <a href="/admin/slot/@Model.Slot.SlotId/delete">
            <div class="ui red button">
                <i class="trash icon"></i>
                <span>Delete</span>
            </div>
        </a>
    </div>
}